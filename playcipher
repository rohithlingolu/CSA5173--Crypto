#include <stdio.h>
#include <string.h>

int main() {
    char key[5][5] = {
        {'p', 'l', 'a', 'y', 'f'},
        {'i', 'r', 'e', 'x', 'm'},
        {'b', 'c', 'd', 'g', 'h'},
        {'k', 'n', 'o', 'q', 's'},
        {'t', 'u', 'v', 'w', 'z'}
    };
    char plaintext[100], ciphertext[100];
    int i, j, k, l, len, r1, c1, r2, c2;

    printf("Enter plaintext (lowercase only): ");
    scanf("%s", plaintext);

    len = strlen(plaintext);

    // Ensure even length by padding 'x'
    if (len % 2 != 0) {
        plaintext[len] = 'x';
        plaintext[len + 1] = '\0';
        len++;
    }

    // Encrypt
    for (i = 0, k = 0; i < len; i += 2) {
        // Find positions of pair in the key matrix
        for (r1 = 0; r1 < 5; r1++) {
            for (c1 = 0; c1 < 5; c1++) {
                if (key[r1][c1] == plaintext[i]) break;
            }
            if (c1 < 5) break;
        }
        for (r2 = 0; r2 < 5; r2++) {
            for (c2 = 0; c2 < 5; c2++) {
                if (key[r2][c2] == plaintext[i + 1]) break;
            }
            if (c2 < 5) break;
        }

        // Same row
        if (r1 == r2) {
            ciphertext[k++] = key[r1][(c1 + 1) % 5];
            ciphertext[k++] = key[r2][(c2 + 1) % 5];
        }
        // Same column
        else if (c1 == c2) {
            ciphertext[k++] = key[(r1 + 1) % 5][c1];
            ciphertext[k++] = key[(r2 + 1) % 5][c2];
        }
        // Rectangle swap
        else {
            ciphertext[k++] = key[r1][c2];
            ciphertext[k++] = key[r2][c1];
        }
    }
    ciphertext[k] = '\0';

    printf("Encrypted text: %s\n", ciphertext);

    return 0;
}
